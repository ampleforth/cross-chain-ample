{
  "isBaseChain": true,
  "ampl": {
    "address": "0xD46bA6D942050d489DBd938a2C909A5d5039A161",
    "abi": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event LogMonetaryPolicyUpdated(address monetaryPolicy)",
      "event LogRebase(uint256 indexed epoch, uint256 totalSupply)",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_DOMAIN() view returns (bytes32)",
      "function EIP712_REVISION() view returns (string)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner_, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address who) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string name, string symbol, uint8 decimals)",
      "function initialize(address owner_)",
      "function isOwner() view returns (bool)",
      "function monetaryPolicy() view returns (address)",
      "function name() view returns (string)",
      "function nonces(address who) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function rebase(uint256 epoch, int256 supplyDelta) returns (uint256)",
      "function renounceOwnership()",
      "function scaledBalanceOf(address who) view returns (uint256)",
      "function scaledTotalSupply() pure returns (uint256)",
      "function setMonetaryPolicy(address monetaryPolicy_)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferAll(address to) returns (bool)",
      "function transferAllFrom(address from, address to) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)"
    ]
  },
  "policy": {
    "address": "0x1B228a749077b8e307C5856cE62Ef35d96Dca2ea",
    "abi": [
      "event LogRebase(uint256 indexed epoch, uint256 exchangeRate, uint256 cpi, int256 requestedSupplyAdjustment, uint256 timestampSec)",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function cpiOracle() view returns (address)",
      "function deviationThreshold() view returns (uint256)",
      "function epoch() view returns (uint256)",
      "function globalAmpleforthEpochAndAMPLSupply() view returns (uint256, uint256)",
      "function inRebaseWindow() view returns (bool)",
      "function initialize(address owner_, address uFrags_, uint256 baseCpi_)",
      "function initialize(address sender)",
      "function isOwner() view returns (bool)",
      "function lastRebaseTimestampSec() view returns (uint256)",
      "function marketOracle() view returns (address)",
      "function minRebaseTimeIntervalSec() view returns (uint256)",
      "function orchestrator() view returns (address)",
      "function owner() view returns (address)",
      "function rebase()",
      "function rebaseLag() view returns (uint256)",
      "function rebaseWindowLengthSec() view returns (uint256)",
      "function rebaseWindowOffsetSec() view returns (uint256)",
      "function renounceOwnership()",
      "function setCpiOracle(address cpiOracle_)",
      "function setDeviationThreshold(uint256 deviationThreshold_)",
      "function setMarketOracle(address marketOracle_)",
      "function setOrchestrator(address orchestrator_)",
      "function setRebaseLag(uint256 rebaseLag_)",
      "function setRebaseTimingParameters(uint256 minRebaseTimeIntervalSec_, uint256 rebaseWindowOffsetSec_, uint256 rebaseWindowLengthSec_)",
      "function transferOwnership(address newOwner)",
      "function uFrags() view returns (address)"
    ]
  },
  "orchestrator": {
    "address": "0x6FB00a180781E75F87E2B690Af0196bAa77C7e7C",
    "abi": [
      "constructor(address policy_)",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addTransaction(address destination, bytes data)",
      "function initialize(address sender)",
      "function isOwner() view returns (bool)",
      "function owner() view returns (address)",
      "function policy() view returns (address)",
      "function rebase()",
      "function removeTransaction(uint256 index)",
      "function renounceOwnership()",
      "function setTransactionEnabled(uint256 index, bool enabled)",
      "function transactions(uint256) view returns (bool enabled, address destination, bytes data)",
      "function transactionsSize() view returns (uint256)",
      "function transferOwnership(address newOwner)"
    ]
  },
  "rateOracle": {
    "address": "0x99C9775E076FDF99388C029550155032Ba2d8914",
    "abi": [
      "function reportDelaySec() view returns (uint256)",
      "function pushReport(uint256 payload)",
      "function getData() returns (uint256, bool)",
      "function addProvider(address provider)",
      "function providers(uint256) view returns (address)",
      "function renounceOwnership()",
      "function removeProvider(address provider)",
      "function owner() view returns (address)",
      "function isOwner() view returns (bool)",
      "function minimumProviders() view returns (uint256)",
      "function purgeReports()",
      "function setReportDelaySec(uint256 reportDelaySec_)",
      "function providersSize() view returns (uint256)",
      "function reportExpirationTimeSec() view returns (uint256)",
      "function setMinimumProviders(uint256 minimumProviders_)",
      "function providerReports(address, uint256) view returns (uint256 timestamp, uint256 payload)",
      "function transferOwnership(address newOwner)",
      "function setReportExpirationTimeSec(uint256 reportExpirationTimeSec_)",
      "constructor(uint256 reportExpirationTimeSec_, uint256 reportDelaySec_, uint256 minimumProviders_)",
      "event ProviderAdded(address provider)",
      "event ProviderRemoved(address provider)",
      "event ReportTimestampOutOfRange(address provider)",
      "event ProviderReportPushed(address indexed provider, uint256 payload, uint256 timestamp)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)"
    ]
  },
  "cpiOracle": {
    "address": "0xa759F960dD59A1aD32c995ecabE802a0C35F244F",
    "abi": [
      "function reportDelaySec() view returns (uint256)",
      "function pushReport(uint256 payload)",
      "function getData() returns (uint256, bool)",
      "function addProvider(address provider)",
      "function providers(uint256) view returns (address)",
      "function renounceOwnership()",
      "function removeProvider(address provider)",
      "function owner() view returns (address)",
      "function isOwner() view returns (bool)",
      "function minimumProviders() view returns (uint256)",
      "function purgeReports()",
      "function setReportDelaySec(uint256 reportDelaySec_)",
      "function providersSize() view returns (uint256)",
      "function reportExpirationTimeSec() view returns (uint256)",
      "function setMinimumProviders(uint256 minimumProviders_)",
      "function providerReports(address, uint256) view returns (uint256 timestamp, uint256 payload)",
      "function transferOwnership(address newOwner)",
      "function setReportExpirationTimeSec(uint256 reportExpirationTimeSec_)",
      "constructor(uint256 reportExpirationTimeSec_, uint256 reportDelaySec_, uint256 minimumProviders_)",
      "event ProviderAdded(address provider)",
      "event ProviderRemoved(address provider)",
      "event ReportTimestampOutOfRange(address provider)",
      "event ProviderReportPushed(address indexed provider, uint256 payload, uint256 timestamp)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)"
    ]
  },
  "chainBridge/bridge": {
    "address": "0x0682642d18ebb4bb5e759AF07A7DE4eADAE8E8c5",
    "abi": [
      "constructor(uint8 chainID, address[] initialRelayers, uint256 initialRelayerThreshold, uint256 fee, uint256 expiry)",
      "event Deposit(uint8 indexed destinationChainID, bytes32 indexed resourceID, uint64 indexed depositNonce)",
      "event Paused(address account)",
      "event ProposalEvent(uint8 indexed originChainID, uint64 indexed depositNonce, uint8 indexed status, bytes32 resourceID, bytes32 dataHash)",
      "event ProposalVote(uint8 indexed originChainID, uint64 indexed depositNonce, uint8 indexed status, bytes32 resourceID)",
      "event RelayerAdded(address indexed relayer)",
      "event RelayerRemoved(address indexed relayer)",
      "event RelayerThresholdChanged(uint256 indexed newThreshold)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Unpaused(address account)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function RELAYER_ROLE() view returns (bytes32)",
      "function _chainID() view returns (uint8)",
      "function _depositCounts(uint8) view returns (uint64)",
      "function _depositRecords(uint64, uint8) view returns (bytes)",
      "function _expiry() view returns (uint256)",
      "function _fee() view returns (uint256)",
      "function _hasVotedOnProposal(uint72, bytes32, address) view returns (bool)",
      "function _proposals(uint72, bytes32) view returns (bytes32 _resourceID, bytes32 _dataHash, uint8 _status, uint256 _proposedBlock)",
      "function _relayerThreshold() view returns (uint256)",
      "function _resourceIDToHandlerAddress(bytes32) view returns (address)",
      "function _totalProposals() view returns (uint256)",
      "function _totalRelayers() view returns (uint256)",
      "function adminAddRelayer(address relayerAddress)",
      "function adminChangeFee(uint256 newFee)",
      "function adminChangeRelayerThreshold(uint256 newThreshold)",
      "function adminPauseTransfers()",
      "function adminRemoveRelayer(address relayerAddress)",
      "function adminSetBurnable(address handlerAddress, address tokenAddress)",
      "function adminSetGenericResource(address handlerAddress, bytes32 resourceID, address contractAddress, bytes4 depositFunctionSig, uint256 depositFunctionDepositerOffset, bytes4 executeFunctionSig)",
      "function adminSetResource(address handlerAddress, bytes32 resourceID, address tokenAddress)",
      "function adminUnpauseTransfers()",
      "function adminWithdraw(address handlerAddress, address tokenAddress, address recipient, uint256 amountOrTokenID)",
      "function cancelProposal(uint8 chainID, uint64 depositNonce, bytes32 dataHash)",
      "function deposit(uint8 destinationChainID, bytes32 resourceID, bytes data) payable",
      "function executeProposal(uint8 chainID, uint64 depositNonce, bytes data, bytes32 resourceID)",
      "function getProposal(uint8 originChainID, uint64 depositNonce, bytes32 dataHash) view returns (tuple(bytes32 _resourceID, bytes32 _dataHash, address[] _yesVotes, address[] _noVotes, uint8 _status, uint256 _proposedBlock))",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function isRelayer(address relayer) view returns (bool)",
      "function paused() view returns (bool)",
      "function renounceAdmin(address newAdmin)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function transferFunds(address[] addrs, uint256[] amounts)",
      "function voteProposal(uint8 chainID, uint64 depositNonce, bytes32 resourceID, bytes32 dataHash)"
    ],
    "hash": "0xf11b6a0f37d6cf08cdafc1b16bc69c74555fdbbb9647cdf8531cdc889f1ae59a",
    "blockNumber": 12345342
  },
  "chainBridge/genericHandler": {
    "address": "0x30b7026e9E5b35C844F6B115Ab4558c3F7e7e3B1",
    "abi": [
      "constructor(address bridgeAddress, bytes32[] initialResourceIDs, address[] initialContractAddresses, bytes4[] initialDepositFunctionSignatures, uint256[] initialDepositFunctionDepositerOffsets, bytes4[] initialExecuteFunctionSignatures)",
      "function _bridgeAddress() view returns (address)",
      "function _contractAddressToDepositFunctionDepositerOffset(address) view returns (uint256)",
      "function _contractAddressToDepositFunctionSignature(address) view returns (bytes4)",
      "function _contractAddressToExecuteFunctionSignature(address) view returns (bytes4)",
      "function _contractAddressToResourceID(address) view returns (bytes32)",
      "function _contractWhitelist(address) view returns (bool)",
      "function _depositRecords(uint8, uint64) view returns (uint8 _destinationChainID, address _depositer, bytes32 _resourceID, bytes _metaData)",
      "function _resourceIDToContractAddress(bytes32) view returns (address)",
      "function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data)",
      "function executeProposal(bytes32 resourceID, bytes data)",
      "function getDepositRecord(uint64 depositNonce, uint8 destId) view returns (tuple(uint8 _destinationChainID, address _depositer, bytes32 _resourceID, bytes _metaData))",
      "function setResource(bytes32 resourceID, address contractAddress, bytes4 depositFunctionSig, uint256 depositFunctionDepositerOffset, bytes4 executeFunctionSig)"
    ],
    "hash": "0x96605e5104dd3688d5f6095292c04afd04d3cc8681747232f6d072355d7b2fee",
    "blockNumber": 12346092
  },
  "chainBridge/transferGateway": {
    "address": "0xdbfC96df67f2044F3359cDC43B3B94b1a27a4b55",
    "abi": [
      "constructor(address bridgeHandler, address ampl_, address policy_, address vault_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event XCRebaseReportIn(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply, uint256 recordedGlobalAmpleforthEpoch, uint256 recordedGlobalAMPLSupply)",
      "event XCRebaseReportOut(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "event XCTransferIn(address recipient, uint256 globalAMPLSupply, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "event XCTransferOut(address sender, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "function ampl() view returns (address)",
      "function owner() view returns (address)",
      "function policy() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function unlock(address senderAddressInSourceChain, address recipient, uint256 amount, uint256 globalAMPLSupply)",
      "function validateAndLock(address sender, address recipientAddressInTargetChain, uint256 amount, uint256 globalAMPLSupply)",
      "function validateRebaseReport(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "function vault() view returns (address)"
    ],
    "hash": "0x6e62067e1e2f65fa8440dfc263a1f755d38082b13311124a7a9f2a12e9900c76",
    "blockNumber": 12478425
  },
  "chainBridge/rebaseGateway": {
    "address": "0x9BED89582490fe0709023A048af3b16382e7A883",
    "abi": [
      "constructor(address bridgeHandler, address ampl_, address policy_, address vault_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event XCRebaseReportIn(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply, uint256 recordedGlobalAmpleforthEpoch, uint256 recordedGlobalAMPLSupply)",
      "event XCRebaseReportOut(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "event XCTransferIn(address recipient, uint256 globalAMPLSupply, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "event XCTransferOut(address sender, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "function ampl() view returns (address)",
      "function owner() view returns (address)",
      "function policy() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function unlock(address senderAddressInSourceChain, address recipient, uint256 amount, uint256 globalAMPLSupply)",
      "function validateAndLock(address sender, address recipientAddressInTargetChain, uint256 amount, uint256 globalAMPLSupply)",
      "function validateRebaseReport(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "function vault() view returns (address)"
    ],
    "hash": "0x5be525d8fd49339f96d0cefd2f4f15a6a3fb66a04e123bf4f7ddb40e5fb5e0bf",
    "blockNumber": 12478422
  },
  "chainBridge/tokenVault": {
    "address": "0x805c7Ecba41f9321bb098ec1cf31d86d9407de2F",
    "abi": [
      "event GatewayLocked(address indexed bridgeGateway, address indexed token, address indexed depositor, uint256 amount)",
      "event GatewayUnlocked(address indexed bridgeGateway, address indexed token, address indexed recipient, uint256 amount)",
      "event GatewayWhitelistUpdated(address indexed bridgeGateway, bool active)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addBridgeGateway(address bridgeGateway)",
      "function lock(address token, address depositor, uint256 amount)",
      "function owner() view returns (address)",
      "function removeBridgeGateway(address bridgeGateway)",
      "function renounceOwnership()",
      "function totalLocked(address token) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function unlock(address token, address recipient, uint256 amount)",
      "function whitelistedBridgeGateways(address) view returns (bool)"
    ],
    "hash": "0x7867408431bc02ad3faae4d5fd8b1ab0600f196700ac1dca650e83c5702d4887",
    "blockNumber": 12478421
  },
  "chainBridge/batchRebaseReporter": {
    "address": "0xc944eb24Fd4993Ad3B056fB8b166F3f40EE2F28b",
    "abi": [
      "function execute(address policy, address bridge, uint8[] destinationChainIDs, bytes32 resourceID, uint128 bridgeFee) payable"
    ],
    "hash": "0x1687ce9f328484e782d7e05bd523ad4e9981ab384641b84895edff55c95ba174",
    "blockNumber": 12478417
  }
}
