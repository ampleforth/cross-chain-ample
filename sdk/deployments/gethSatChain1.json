{
  "proxyAdmin": {
    "address": "0xCc065538BE7C0066AA7543B4391A894445B95364",
    "abi": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function isOwner() view returns (bool)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "hash": "0x87f8a5af51ebb77d24385e222649b5dc8df6a368f1c1910958311ddedf615fe6",
    "blockNumber": 299
  },
  "xcAmple": {
    "address": "0x299D8C3c7C8DBb12D4f1E5bC87FA298E2Eab8f9d",
    "abi": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ControllerUpdated(address controller)",
      "event LogRebase(uint256 indexed epoch, uint256 globalAMPLSupply)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIP712_DOMAIN() view returns (bytes32)",
      "function EIP712_REVISION() view returns (string)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner_, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address who) view returns (uint256)",
      "function burn(address who, uint256 xcAmpleAmount)",
      "function controller() view returns (address)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function globalAMPLSupply() view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string name, string symbol, uint256 globalAMPLSupply_)",
      "function mint(address who, uint256 xcAmpleAmount)",
      "function name() view returns (string)",
      "function nonces(address who) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function rebase(uint256 epoch, uint256 newGlobalAMPLSupply) returns (uint256)",
      "function renounceOwnership()",
      "function scaledBalanceOf(address who) view returns (uint256)",
      "function scaledTotalSupply() pure returns (uint256)",
      "function setController(address controller_)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferAll(address to) returns (bool)",
      "function transferAllFrom(address from, address to) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "hash": "0x61867144a75d7a85f45f30297ccdeaf1675e449dfe3fc4c384854d3f4d2b0eb3",
    "blockNumber": 313
  },
  "xcAmpleController": {
    "address": "0x6EcA26B05c70D2c63Cebc53Dd73aaa8fE579F56C",
    "abi": [
      "event GatewayBurn(address indexed bridgeGateway, address indexed depositor, uint256 xcAmpleAmount)",
      "event GatewayMint(address indexed bridgeGateway, address indexed recipient, uint256 xcAmpleAmount)",
      "event GatewayRebaseReported(address indexed bridgeGateway, uint256 indexed epoch, uint256 globalAMPLSupply, uint256 timestampSec)",
      "event GatewayWhitelistUpdated(address indexed bridgeGateway, bool active)",
      "event LogRebase(uint256 indexed epoch, int256 requestedSupplyAdjustment, uint256 timestampSec)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addBridgeGateway(address bridgeGateway)",
      "function burn(address depositor, uint256 xcAmpleAmount)",
      "function globalAmpleforthEpoch() view returns (uint256)",
      "function globalAmpleforthEpochAndAMPLSupply() view returns (uint256, uint256)",
      "function initialize(address xcAmple_, uint256 globalAmpleforthEpoch_)",
      "function lastRebaseTimestampSec() view returns (uint256)",
      "function mint(address recipient, uint256 xcAmpleAmount)",
      "function nextGlobalAMPLSupply() view returns (uint256)",
      "function nextGlobalAmpleforthEpoch() view returns (uint256)",
      "function owner() view returns (address)",
      "function rebase()",
      "function rebaseRelayer() view returns (address)",
      "function removeBridgeGateway(address bridgeGateway)",
      "function renounceOwnership()",
      "function reportRebase(uint256 nextGlobalAmpleforthEpoch_, uint256 nextGlobalAMPLSupply_)",
      "function setRebaseRelayer(address rebaseRelayer_)",
      "function transferOwnership(address newOwner)",
      "function whitelistedBridgeGateways(address) view returns (bool)",
      "function xcAmple() view returns (address)"
    ],
    "hash": "0x76529520d186ebfc9d1dc431e12ab74c2c5109f94b01a88e63e77aa48d2e3861",
    "blockNumber": 326
  },
  "rebaseRelayer": {
    "address": "0xb7c6F0994BA8c0664451d8E3f682F702eba0cb73",
    "abi": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TransactionFailed(address indexed destination, uint256 index, bytes data, bytes reason)",
      "function addTransaction(address destination, bytes data)",
      "function executeAll() returns (bool)",
      "function owner() view returns (address)",
      "function removeTransaction(uint256 index)",
      "function renounceOwnership()",
      "function setTransactionEnabled(uint256 index, bool enabled)",
      "function transactions(uint256) view returns (bool enabled, address destination, bytes data)",
      "function transactionsSize() view returns (uint256)",
      "function transferOwnership(address newOwner)"
    ],
    "hash": "0xaa44bae136fe5dac4279f9ee05b9ea37157726383accdfc02ed5b36ed6639f92",
    "blockNumber": 334
  },
  "isBaseChain": false,
  "chainBridge/bridge": {
    "address": "0xD7e36FC5540986f20e42a5941777Ec333b4Cf875",
    "abi": [
      "constructor(uint8 chainID, address[] initialRelayers, uint256 initialRelayerThreshold, uint256 fee, uint256 expiry)",
      "event Deposit(uint8 indexed destinationChainID, bytes32 indexed resourceID, uint64 indexed depositNonce)",
      "event Paused(address account)",
      "event ProposalEvent(uint8 indexed originChainID, uint64 indexed depositNonce, uint8 indexed status, bytes32 resourceID, bytes32 dataHash)",
      "event ProposalVote(uint8 indexed originChainID, uint64 indexed depositNonce, uint8 indexed status, bytes32 resourceID)",
      "event RelayerAdded(address indexed relayer)",
      "event RelayerRemoved(address indexed relayer)",
      "event RelayerThresholdChanged(uint256 indexed newThreshold)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Unpaused(address account)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function RELAYER_ROLE() view returns (bytes32)",
      "function _chainID() view returns (uint8)",
      "function _depositCounts(uint8) view returns (uint64)",
      "function _depositRecords(uint64, uint8) view returns (bytes)",
      "function _expiry() view returns (uint256)",
      "function _fee() view returns (uint256)",
      "function _hasVotedOnProposal(uint72, bytes32, address) view returns (bool)",
      "function _proposals(uint72, bytes32) view returns (bytes32 _resourceID, bytes32 _dataHash, uint8 _status, uint256 _proposedBlock)",
      "function _relayerThreshold() view returns (uint256)",
      "function _resourceIDToHandlerAddress(bytes32) view returns (address)",
      "function _totalProposals() view returns (uint256)",
      "function _totalRelayers() view returns (uint256)",
      "function adminAddRelayer(address relayerAddress)",
      "function adminChangeFee(uint256 newFee)",
      "function adminChangeRelayerThreshold(uint256 newThreshold)",
      "function adminPauseTransfers()",
      "function adminRemoveRelayer(address relayerAddress)",
      "function adminSetBurnable(address handlerAddress, address tokenAddress)",
      "function adminSetGenericResource(address handlerAddress, bytes32 resourceID, address contractAddress, bytes4 depositFunctionSig, uint256 depositFunctionDepositerOffset, bytes4 executeFunctionSig)",
      "function adminSetResource(address handlerAddress, bytes32 resourceID, address tokenAddress)",
      "function adminUnpauseTransfers()",
      "function adminWithdraw(address handlerAddress, address tokenAddress, address recipient, uint256 amountOrTokenID)",
      "function cancelProposal(uint8 chainID, uint64 depositNonce, bytes32 dataHash)",
      "function deposit(uint8 destinationChainID, bytes32 resourceID, bytes data) payable",
      "function executeProposal(uint8 chainID, uint64 depositNonce, bytes data, bytes32 resourceID)",
      "function getProposal(uint8 originChainID, uint64 depositNonce, bytes32 dataHash) view returns (tuple(bytes32 _resourceID, bytes32 _dataHash, address[] _yesVotes, address[] _noVotes, uint8 _status, uint256 _proposedBlock))",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function isRelayer(address relayer) view returns (bool)",
      "function paused() view returns (bool)",
      "function renounceAdmin(address newAdmin)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function transferFunds(address[] addrs, uint256[] amounts)",
      "function voteProposal(uint8 chainID, uint64 depositNonce, bytes32 resourceID, bytes32 dataHash)"
    ],
    "hash": "0xb09ac83ce268014fdf8c15e698ba05e8c5375679487ba8743f7d371671216686",
    "blockNumber": 770
  },
  "chainBridge/genericHandler": {
    "address": "0xF63DC56cD7B55DE02A0341A5F4bbFAf9657721D9",
    "abi": [
      "constructor(address bridgeAddress, bytes32[] initialResourceIDs, address[] initialContractAddresses, bytes4[] initialDepositFunctionSignatures, uint256[] initialDepositFunctionDepositerOffsets, bytes4[] initialExecuteFunctionSignatures)",
      "function _bridgeAddress() view returns (address)",
      "function _contractAddressToDepositFunctionDepositerOffset(address) view returns (uint256)",
      "function _contractAddressToDepositFunctionSignature(address) view returns (bytes4)",
      "function _contractAddressToExecuteFunctionSignature(address) view returns (bytes4)",
      "function _contractAddressToResourceID(address) view returns (bytes32)",
      "function _contractWhitelist(address) view returns (bool)",
      "function _depositRecords(uint8, uint64) view returns (uint8 _destinationChainID, address _depositer, bytes32 _resourceID, bytes _metaData)",
      "function _resourceIDToContractAddress(bytes32) view returns (address)",
      "function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data)",
      "function executeProposal(bytes32 resourceID, bytes data)",
      "function getDepositRecord(uint64 depositNonce, uint8 destId) view returns (tuple(uint8 _destinationChainID, address _depositer, bytes32 _resourceID, bytes _metaData))",
      "function setResource(bytes32 resourceID, address contractAddress, bytes4 depositFunctionSig, uint256 depositFunctionDepositerOffset, bytes4 executeFunctionSig)"
    ],
    "hash": "0xdf5717eed800a03ef1b35c8199c508fde632bb842a22bd536f58e50880c1eb80",
    "blockNumber": 774
  },
  "chainBridge/erc20Handler": {
    "address": "0x29e7210028defEF426302407F867a99775c8313F",
    "abi": [
      "constructor(address bridgeAddress, bytes32[] initialResourceIDs, address[] initialContractAddresses, address[] burnableContractAddresses)",
      "function _bridgeAddress() view returns (address)",
      "function _burnList(address) view returns (bool)",
      "function _contractWhitelist(address) view returns (bool)",
      "function _depositRecords(uint8, uint64) view returns (address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _amount)",
      "function _resourceIDToTokenContractAddress(bytes32) view returns (address)",
      "function _tokenContractAddressToResourceID(address) view returns (bytes32)",
      "function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data)",
      "function executeProposal(bytes32 resourceID, bytes data)",
      "function fundERC20(address tokenAddress, address owner, uint256 amount)",
      "function getDepositRecord(uint64 depositNonce, uint8 destId) view returns (tuple(address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _amount))",
      "function setBurnable(address contractAddress)",
      "function setResource(bytes32 resourceID, address contractAddress)",
      "function withdraw(address tokenAddress, address recipient, uint256 amount)"
    ],
    "hash": "0x4bbe7f0b07757487ae4d19508d2af7b2f69b444839a27039f8e643958b6c7b4e",
    "blockNumber": 778
  },
  "chainBridge/erc721Handler": {
    "address": "0x90B0425ed5D437beb8ED833E9C7908a809972725",
    "abi": [
      "constructor(address bridgeAddress, bytes32[] initialResourceIDs, address[] initialContractAddresses, address[] burnableContractAddresses)",
      "function _bridgeAddress() view returns (address)",
      "function _burnList(address) view returns (bool)",
      "function _contractWhitelist(address) view returns (bool)",
      "function _depositRecords(uint8, uint64) view returns (address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _tokenID, bytes _metaData)",
      "function _resourceIDToTokenContractAddress(bytes32) view returns (address)",
      "function _tokenContractAddressToResourceID(address) view returns (bytes32)",
      "function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes data)",
      "function executeProposal(bytes32 resourceID, bytes data)",
      "function fundERC721(address tokenAddress, address owner, uint256 tokenID)",
      "function getDepositRecord(uint64 depositNonce, uint8 destId) view returns (tuple(address _tokenAddress, uint8 _destinationChainID, bytes32 _resourceID, bytes _destinationRecipientAddress, address _depositer, uint256 _tokenID, bytes _metaData))",
      "function setBurnable(address contractAddress)",
      "function setResource(bytes32 resourceID, address contractAddress)",
      "function withdraw(address tokenAddress, address recipient, uint256 tokenID)"
    ],
    "hash": "0xb248a090c0a845c306cf52bab921b510f0d9eb320bb58d2926b59e957890eefc",
    "blockNumber": 782
  },
  "chainBridge/transferGateway": {
    "address": "0xbD43eD80cDC7e07e3304D548555B6D30a2Ff2F94",
    "abi": [
      "constructor(address bridgeHandler, address xcAmple_, address xcController_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event XCRebaseReportIn(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply, uint256 recordedGlobalAmpleforthEpoch, uint256 recordedGlobalAMPLSupply)",
      "event XCRebaseReportOut(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "event XCTransferIn(address recipient, uint256 globalAMPLSupply, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "event XCTransferOut(address sender, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "function mint(address senderAddressInSourceChain, address recipient, uint256 amount, uint256 globalAMPLSupply)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function reportRebase(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "function transferOwnership(address newOwner)",
      "function validateAndBurn(address sender, address recipientAddressInTargetChain, uint256 amount, uint256 globalAMPLSupply)",
      "function xcAmple() view returns (address)",
      "function xcController() view returns (address)"
    ],
    "hash": "0xbd6450879db1ff440a29cbe1c17b20ded90f4fb2eda0f05777a2fd9399245e0d",
    "blockNumber": 791
  },
  "chainBridge/rebaseGateway": {
    "address": "0xb833782090cB2c99C7D4b55Fe2EFf45E8C139706",
    "abi": [
      "constructor(address bridgeHandler, address xcAmple_, address xcController_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event XCRebaseReportIn(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply, uint256 recordedGlobalAmpleforthEpoch, uint256 recordedGlobalAMPLSupply)",
      "event XCRebaseReportOut(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "event XCTransferIn(address recipient, uint256 globalAMPLSupply, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "event XCTransferOut(address sender, uint256 amount, uint256 recordedGlobalAMPLSupply)",
      "function mint(address senderAddressInSourceChain, address recipient, uint256 amount, uint256 globalAMPLSupply)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function reportRebase(uint256 globalAmpleforthEpoch, uint256 globalAMPLSupply)",
      "function transferOwnership(address newOwner)",
      "function validateAndBurn(address sender, address recipientAddressInTargetChain, uint256 amount, uint256 globalAMPLSupply)",
      "function xcAmple() view returns (address)",
      "function xcController() view returns (address)"
    ],
    "hash": "0x617ce684c3a46488858152697b47858f5d6b6bee97e35e12b744128a6cde71db",
    "blockNumber": 786
  }
}